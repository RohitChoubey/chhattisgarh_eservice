{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\eservices\\\\src\\\\components\\\\pages\\\\DeptLogin.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useFormInputValidation } from \"react-form-input-validation\";\nimport { decode as base64_decode, encode as base64_encode } from 'base-64';\nimport '../Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DeptLogin() {\n  _s();\n  const navigate = useNavigate();\n  const [role, setRole] = useState('');\n  const [emailaddress, setEmailAddress] = useState('');\n  const [errorMessages, setErrorMessages] = useState({});\n  const [fields, errors, form] = useFormInputValidation({\n    email_address: \"\",\n    password: \"\"\n  }, {\n    email_address: \"required|email\",\n    password: \"required\"\n  });\n  const [authenticated, setauthenticated] = useState(localStorage.getItem(localStorage.getItem(\"authenticated\") || false));\n\n  // useEffect(() => {\n  //   if (form.isValidForm) {\n  //     // console.log(fields, errors, form);\n  //     // Perform api call here\n  //     alert('f');\n  //   }\n  // }, [])\n\n  // User Login info\n  // const database = [\n  //   {\n  //     email_address: \"rohit@gmail.com\",\n  //     password: \"pass\",\n  //     role: \"user\"\n  //   },\n  //   {\n  //     email_address: \"rohit1@gmail.com\",\n  //     password: \"pass\",\n  //     role: \"rfo\"\n  //   },\n  //   {\n  //     email_address: \"rohit2@gmail.com\",\n  //     password: \"pass\",\n  //     role: \"dfo\"\n  //   }\n  // ];\n\n  const onSubmit = async event => {\n    //Prevent page reload\n    event.preventDefault();\n    // var { email_address, password } = document.forms[0];\n    const isValid = await form.validate(event);\n    // Find user login info\n    // const userData = database.find((user) => user.email_address === email_address.value);\n\n    if (isValid) {\n      const email = fields.email_address;\n      const password = base64_encode(fields.password);\n      const data = {\n        email,\n        password\n      };\n      await axios.post(\"/userLogin\", data).then(response => {\n        console.log(localStorage.getItem('token-info', response.data));\n        JSON.parse(localStorage.getItem('token-info', response.data));\n        console.log(JSON.parse(localStorage.getItem('token-info', response.data)));\n        //localStorage.setItem(\"authenticated\", true);\n        // setauthenticated(true);\n\n        // var getRole = JSON.parse(localStorage.getItem('token-info'));\n\n        console.log(getRole);\n        // if(getRole.role === \"user\"){\n        //   navigate(\"/\");\n        //   window.location.reload(true);\n        // }else if(getRole.role === \"ro\"){\n        //   navigate(\"/mainrecord\");\n        //   window.location.reload(true);\n        // }\n      }).catch(error => {\n        console.log(error);\n      });\n      // if(fields.email_address===\"rohit@gmail.com\"){\n      //   sessionStorage.setItem(\"authenticated\", true);\n      //   navigate(\"/admin/adminHome\");\n      // }\n\n      // Compare user info\n      // if (userData) {\n      //   if (userData.password !== password.value) {\n      //     // Invalid password\n      //     setErrorMessages({ name: \"password\", message: errors.password });\n      //   } else {\n      //     // userData.role == \"user\" ? navigate(\"/\") : userData.role == \"rfo\" ? navigate(\"/mainrecords\") : navigate(\"DeptLogin\");\n      //     if(userData.role === \"user\"){\n      //       navigate(\"/\");\n      //       window.location.reload(true);\n      //     }else if(userData.role === \"rfo\"){\n      //       navigate(\"/mainrecord\");\n      //       window.location.reload(true);\n      //     }\n\n      //     localStorage.setItem('token-info', JSON.stringify(userData));\n      //     localStorage.setItem(\"authenticated\", true)\n      //     setauthenticated(true);\n      //     setRole(userData.role);\n      //     setEmailAddress(userData.emailAddress);\n\n      //   }\n      // } else {\n      //   // email_address not found\n      //   alert({ name: \"email_address\", message: errors.email_address });\n      // }\n\n      // console.log(fields, errors);\n      // Perform api call here\n    } else {\n      // email_address not found\n      console.log('Something went wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Auth-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Auth-form myForm\",\n        method: \"post\",\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Auth-form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Auth-form-title\",\n            children: \"Correlation Assurance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Email address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"span\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control mt-1\",\n              placeholder: \"Enter email\",\n              name: \"email_address\",\n              onBlur: form.handleBlurEvent,\n              onChange: form.handleChangeEvent,\n              value: fields.email_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"error\",\n              children: errors.email_address ? errors.email_address : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control mt-1\",\n              placeholder: \"Enter password\",\n              name: \"password\",\n              onBlur: form.handleBlurEvent,\n              onChange: form.handleChangeEvent,\n              value: fields.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"error\",\n              children: errors.password ? errors.password : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forgot-password text-right mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"../ForgetPassword\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(DeptLogin, \"OL1k/QMbG9iVSeOu+Kw/JAkK9Ks=\", false, function () {\n  return [useNavigate, useFormInputValidation];\n});\n_c = DeptLogin;\nvar _c;\n$RefreshReg$(_c, \"DeptLogin\");","map":{"version":3,"names":["axios","React","useState","Link","useNavigate","useFormInputValidation","decode","base64_decode","encode","base64_encode","DeptLogin","navigate","role","setRole","emailaddress","setEmailAddress","errorMessages","setErrorMessages","fields","errors","form","email_address","password","authenticated","setauthenticated","localStorage","getItem","onSubmit","event","preventDefault","isValid","validate","email","data","post","then","response","console","log","JSON","parse","getRole","catch","error","handleBlurEvent","handleChangeEvent"],"sources":["D:/React/eservices/src/components/pages/DeptLogin.js"],"sourcesContent":["import axios from \"axios\";\nimport React,{ useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useFormInputValidation } from \"react-form-input-validation\";\nimport {decode as base64_decode, encode as base64_encode} from 'base-64';\nimport '../Login.css';\n\nexport default function DeptLogin() {\n  const navigate = useNavigate();\n  const [role, setRole] = useState('');\n  const [emailaddress, setEmailAddress] = useState('');\n  const [errorMessages, setErrorMessages] = useState({});\n  const [fields, errors, form] = useFormInputValidation({ email_address: \"\", password: \"\"}, {email_address: \"required|email\", password: \"required\"});\n  const [authenticated, setauthenticated] = useState(localStorage.getItem(localStorage.getItem(\"authenticated\") || false));\n\n  // useEffect(() => {\n  //   if (form.isValidForm) {\n  //     // console.log(fields, errors, form);\n  //     // Perform api call here\n  //     alert('f');\n  //   }\n  // }, [])\n\n  // User Login info\n  // const database = [\n  //   {\n  //     email_address: \"rohit@gmail.com\",\n  //     password: \"pass\",\n  //     role: \"user\"\n  //   },\n  //   {\n  //     email_address: \"rohit1@gmail.com\",\n  //     password: \"pass\",\n  //     role: \"rfo\"\n  //   },\n  //   {\n  //     email_address: \"rohit2@gmail.com\",\n  //     password: \"pass\",\n  //     role: \"dfo\"\n  //   }\n  // ];\n\n\n  const onSubmit = async (event) => {\n    //Prevent page reload\n    event.preventDefault();\n    // var { email_address, password } = document.forms[0];\n    const isValid = await form.validate(event);\n    // Find user login info\n    // const userData = database.find((user) => user.email_address === email_address.value);\n    \n    if (isValid) {\n      const email = fields.email_address;\n      const password = base64_encode(fields.password);\n      const data = {email, password};\n      await axios\n        .post(\"/userLogin\", data).then((response) =>{\n          \n          console.log(localStorage.getItem('token-info',response.data));\n\n          JSON.parse(localStorage.getItem('token-info',response.data));\n          console.log( JSON.parse(localStorage.getItem('token-info',response.data)));\n          //localStorage.setItem(\"authenticated\", true);\n          // setauthenticated(true);\n\n          // var getRole = JSON.parse(localStorage.getItem('token-info'));\n\n          console.log(getRole);\n          // if(getRole.role === \"user\"){\n          //   navigate(\"/\");\n          //   window.location.reload(true);\n          // }else if(getRole.role === \"ro\"){\n          //   navigate(\"/mainrecord\");\n          //   window.location.reload(true);\n          // }\n      })\n      .catch((error) =>{\n        console.log(error);\n      })\n      // if(fields.email_address===\"rohit@gmail.com\"){\n      //   sessionStorage.setItem(\"authenticated\", true);\n      //   navigate(\"/admin/adminHome\");\n      // }\n\n      // Compare user info\n      // if (userData) {\n      //   if (userData.password !== password.value) {\n      //     // Invalid password\n      //     setErrorMessages({ name: \"password\", message: errors.password });\n      //   } else {\n      //     // userData.role == \"user\" ? navigate(\"/\") : userData.role == \"rfo\" ? navigate(\"/mainrecords\") : navigate(\"DeptLogin\");\n      //     if(userData.role === \"user\"){\n      //       navigate(\"/\");\n      //       window.location.reload(true);\n      //     }else if(userData.role === \"rfo\"){\n      //       navigate(\"/mainrecord\");\n      //       window.location.reload(true);\n      //     }\n\n\n      //     localStorage.setItem('token-info', JSON.stringify(userData));\n      //     localStorage.setItem(\"authenticated\", true)\n      //     setauthenticated(true);\n      //     setRole(userData.role);\n      //     setEmailAddress(userData.emailAddress);\n\n      //   }\n      // } else {\n      //   // email_address not found\n      //   alert({ name: \"email_address\", message: errors.email_address });\n      // }\n\n      // console.log(fields, errors);\n      // Perform api call here\n    }\n    else {\n      // email_address not found\n     console.log('Something went wrong');\n    }\n  }\n  \n  return (\n    <>\n     <div className=\"Auth-form-container\">\n      <form className=\"Auth-form myForm\" method=\"post\" noValidate autoComplete=\"off\"  onSubmit={onSubmit}>\n        <div className=\"Auth-form-content\">\n          <h3 className=\"Auth-form-title\">Correlation Assurance</h3>\n          <div className=\"form-group mt-3\">\n            <label>Email address <span className='span'>*</span></label>\n            <input\n              type=\"email\"\n              className=\"form-control mt-1\"\n              placeholder=\"Enter email\"\n              name=\"email_address\"\n              onBlur={form.handleBlurEvent}\n              onChange={form.handleChangeEvent}\n              value={fields.email_address}\n            />\n             <label className=\"error\">\n              {errors.email_address  ? errors.email_address : \"\"} \n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control mt-1\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              onBlur={form.handleBlurEvent}\n              onChange={form.handleChangeEvent}\n              value={fields.password}\n            />\n             <label className=\"error\">\n              {errors.password ? errors.password : \"\"}\n            </label>\n          </div>  \n          <div className=\"d-grid gap-2 mt-3\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </div>\n          <p className=\"forgot-password text-right mt-2\">\n          <Link to='../ForgetPassword'>Forgot password?</Link>\n          </p>\n        </div>\n      </form>\n    </div>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}