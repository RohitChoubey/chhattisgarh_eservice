{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\eservices\\\\src\\\\components\\\\pages\\\\DeptLogin.js\";\nimport React from 'react';\nimport '../../App.css';\nimport '../Login.css';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  span: {\n    color: \"red\"\n  }\n};\nexport default function DeptLogin() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anywhere in your app!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 100);\n      },\n      children: _ref2 => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n          /* and other goodies */\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = DeptLogin;\nvar _c;\n$RefreshReg$(_c, \"DeptLogin\");","map":{"version":3,"names":["React","Button","Col","Form","Row","Formik","styles","span","color","DeptLogin","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["D:/React/eservices/src/components/pages/DeptLogin.js"],"sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport '../Login.css';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport { Formik } from 'formik';\n\n\nconst styles = {\n    span:{\n      color:\"red\"\n    }\n};\n\n  \nexport default function DeptLogin() {\n  return (\n    <div>\n    <h1>Anywhere in your app!</h1>\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 100);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.email}\n          />\n          {errors.email && touched.email && errors.email}\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n          />\n          {errors.password && touched.password && errors.password}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </form>\n      )}\n    </Formik>\n  </div>\n);\n  \n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAO,cAAc;AACrB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAGhC,MAAMC,MAAM,GAAG;EACXC,IAAI,EAAC;IACHC,KAAK,EAAC;EACR;AACJ,CAAC;AAGD,eAAe,SAASC,SAAS,GAAG;EAClC,oBACE;IAAA,wBACA;MAAA,UAAI;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9B,QAAC,MAAM;MACL,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAC3C,QAAQ,EAAEC,MAAM,IAAI;QAClB,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjB,IAAI,CAACD,MAAM,CAACF,KAAK,EAAE;UACjBG,MAAM,CAACH,KAAK,GAAG,UAAU;QAC3B,CAAC,MAAM,IACL,CAAC,0CAA0C,CAACI,IAAI,CAACF,MAAM,CAACF,KAAK,CAAC,EAC9D;UACAG,MAAM,CAACH,KAAK,GAAG,uBAAuB;QACxC;QACA,OAAOG,MAAM;MACf,CAAE;MACF,QAAQ,EAAE,CAACD,MAAM,WAAwB;QAAA,IAAtB;UAAEG;QAAc,CAAC;QAClCC,UAAU,CAAC,MAAM;UACfC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;UACtCG,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,EAAE,GAAG,CAAC;MACT,CAAE;MAAA,UAED;QAAA,IAAC;UACAH,MAAM;UACNC,MAAM;UACNO,OAAO;UACPC,YAAY;UACZC,UAAU;UACVC,YAAY;UACZC;UACA;QACF,CAAC;QAAA,oBACC;UAAM,QAAQ,EAAED,YAAa;UAAA,wBAC3B;YACE,IAAI,EAAC,OAAO;YACZ,IAAI,EAAC,OAAO;YACZ,QAAQ,EAAEF,YAAa;YACvB,MAAM,EAAEC,UAAW;YACnB,KAAK,EAAEV,MAAM,CAACF;UAAM;YAAA;YAAA;YAAA;UAAA,QACpB,EACDG,MAAM,CAACH,KAAK,IAAIU,OAAO,CAACV,KAAK,IAAIG,MAAM,CAACH,KAAK,eAC9C;YACE,IAAI,EAAC,UAAU;YACf,IAAI,EAAC,UAAU;YACf,QAAQ,EAAEW,YAAa;YACvB,MAAM,EAAEC,UAAW;YACnB,KAAK,EAAEV,MAAM,CAACD;UAAS;YAAA;YAAA;YAAA;UAAA,QACvB,EACDE,MAAM,CAACF,QAAQ,IAAIS,OAAO,CAACT,QAAQ,IAAIE,MAAM,CAACF,QAAQ,eACvD;YAAQ,IAAI,EAAC,QAAQ;YAAC,QAAQ,EAAEa,YAAa;YAAA,UAAC;UAE9C;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;IACR;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAGR;AAAC,KA5DuBf,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}